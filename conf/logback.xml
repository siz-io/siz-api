<!-- # Logger
        # ~~~~~
        # You can also configure logback (http://logback.qos.ch/),
        # by providing an application-logger.xml file in the conf directory.

        # Root logger:
        logger.root=ERROR

        # Logger used by the framework:
        logger.play=INFO

        # Logger provided to your application:
        logger.application=DEBUG

-->


<!-- on peut activer le reload automatique de conf avec  scan="true" scanPeriod="30 seconds"-->
<configuration scan="true" scanPeriod="1 seconds">

    <conversionRule conversionWord="coloredLevel" converterClass="play.api.Logger$ColoredLevel"/>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>[%contextName][%date][%level][%thread][%class{36}:%L] - %message%n%xException{5}</pattern>
        </encoder>
    </appender>

    <if condition='isDefined("LOGENTRIES_TOKEN")'>
        <then>
            <appender name="LOGENTRIES" class="com.logentries.logback.LogentriesAppender">
                <Debug>False</Debug>
                <Token>${LOGENTRIES_TOKEN}</Token>
                <Ssl>true</Ssl>
                <facility>USER</facility>
                <layout>
                    <pattern>%d{HH:mm:ss.SSS} %-5level %logger{36} - [%X{token_id}][%X{user_id}] - %msg%n%xException{5}</pattern>
                </layout>
            </appender>
        </then>
    </if>

    <!--
      The logger name is typically the Java/Scala package name.
      This configures the log level to log at for a package and its children packages.
    -->
    <logger name="play" level="INFO"/>
    <logger name="application" level="DEBUG"/>

    <logger name="reactivemongo" level="INFO"/>

    <root level="INFO">
        <if condition='isDefined("LOGENTRIES_TOKEN")'>
            <then>
                <appender-ref ref="LOGENTRIES"/>
            </then>
        </if>
        <appender-ref ref="STDOUT"/>
    </root>

</configuration>
